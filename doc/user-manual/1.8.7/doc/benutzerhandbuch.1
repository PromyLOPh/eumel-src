____________________________________________________________________________ 
 
 
#on("b")##on ("u")# 
#center#Betriebssystem E U M E L 
#off ("u")# 
 
 
#center#Benutzerhandbuch 
 
 
 
 
#off("b")# 
#center#Lizenzfreie Software der 
#on ("b")# 
 
#center#Gesellschaft für Mathematik und Datenverarbeitung mbH, 
#center#5205 Sankt Augustin 
 
 
#off("b")# 
#center#Die Nutzung der Software ist nur im Schul- und Hochschulbereich für 
#center#nichtkommerzielle Zwecke gestattet. 
 
#center#Gewährleistung und Haftung werden ausgeschlossen 
 
 
____________________________________________________________________________ 
#page# 
 
#start(5.0,1.5)##pagenr("%",1)##setcount(1)##block##pageblock##count per page# 
#headeven# 
#lpos(0.0)##cpos(5.5)##rpos(11.0)# 
#table# 
                     EUMEL-Benutzerhandbuch    
#fillchar(" ")# 
#on("u")#       #off("u")# 
#table end##clear pos# 
 
#end# 
#headodd# 
#lpos(0.0)##cpos(5.5)##rpos(11.0)##fillchar(" ")# 
#table# 
     Teil 1: Einleitung    
#fillchar(" ")# 
#on("u")#       #off("u")# 
#table end##clear pos# 
 
#end# 
#bottomeven# 
 
#lpos(0.0)##cpos(5.5)##rpos(11.0)# 
#table# 
#fillchar(" ")# 
#on("u")#       #off("u")# 
#fillchar(" ")# 
1 - %            GMD 
#tableend##clearpos# 
#end# 
#bottomodd# 
 
#lpos(0.0)##cpos(5.5)##rpos(11.0)# 
#table# 
#fillchar(" ")# 
#on("u")#       #off("u")# 
#fillchar(" ")# 
GMD        1 - % 
#tableend##clearpos# 
#end# 
TEIL 1: Einleitung 
#free(1.0)# 
 
1.1. Vorwort 
#free(1.0)# 
 
Dieses Buch bietet Ihnen eine Anleitung zur Handhabung des Betriebssystems
EUMEL in Hinblick auf die Textverarbeitung. Das Buch wendet sich somit an alle, die
das leicht erlernbare EUMEL-System zur Erstellung von Texten jeglicher Art und
jeden Umfangs nutzen wollen. 
 
Die Anleitung erfordert keinerlei Vorkenntnisse, weder von Computern im allgemei­
nen noch von EUMEL im besonderen. Neulingen auf dem Gebiet der Benutzung eines
Computers sei empfohlen, dieses erste Kapitel, das sich kurz mit der 'grauen Theorie'
beschäftigt, mindestens zweimal zu lesen: 
 
-  Der erste Durchgang sollte nur einer groben Orientierung dienen. Die Begriffe, die
   teilweise erst im routinierteren Umgang Sinn gewinnen, sollten Sie 'mal gehört'
   haben, um die folgenden Kapitel leichter lesen zu können. 
 
-  Der zweite Durchgang erscheint uns sinnvoll, wenn Sie sich 'freigeschwommen'
   haben. Wenn der Umgang mit dem EUMEL-System Ihnen nach einigen Tagen
   schon vertrauter erscheint, ist es zweckmäßig, sich auf dem Hintergrund der
   gemachten Erfahrungen die Erklärungen noch einmal durchzulesen. Einige der
   Begriffe werden erst dann wirklich verständlich und manche Unsicherheit wird
   beseitigt werden. 
 
Die weiteren Teile des Buches geben dann Anleitung vom ersten Einstieg ins
EUMEL-System bis hin zur detaillierten Beschreibung der Textverarbeitung. Alle in
Teil 3 und 4 enthaltenen Beispiele sollten Sie sorgfältig durchgehen und am Bild­
schirm nachvollziehen. Aus dem Teil 5 können Sie nach eigener Einschätzung zu­
nächst die Bereiche auswählen, die Sie selbst für besonders wichtig halten. Sie wer­
den feststellen, daß Sie durch den Umgang mit der EUMEL-Textverarbeitung mit
fortschreitender Routine immer mehr der gebotenen Möglichkeiten hinzunehmen
werden. 
#free(1.0)# 
Was ist ein Betriebssystem ? 
 
Ein #ib#Betriebssystem#ie# ist eine Sammlung von Programmen, die dem Benutzer eines
Computers die Arbeit mit diesem Gerät erst ermöglichen. Die Programme des Be­
triebssystems stellen die Verbindung zwischen den Bausteinen eines Computers, der
Hardware, und den Anwendungsprogrammen eines Benutzers her. 
 
Alle Programme, die diese riesige Lücke schließen und z.B. dafür sorgen, daß der
Befehl: #on("i")#drucke ("diesen brief")#off("i")# tatsächlich dazu führt, daß der eben noch am Bild­
schirm verfaßte Brief zum Drucker gesendet und dort ausgedruckt wird, sind soge­
nannte Systemprogramme, Teile des Betriebssystems. 
 
Dieses Benutzerhandbuch zum Betriebssystem EUMEL wird Ihnen schrittweise die
Befehle erklären, die Sie zur Nutzung aller Möglichkeiten der Textverarbeitung mit
EUMEL verwenden können, und Ihnen somit einen Teil des Betriebssystems vorstel­
len. 
#free(1.0)# 
Ist EUMEL anders als andere ?
 
#on("b")#Ja.#off("b")# Das Betriebssystem EUMEL (#on("b")#E#off("b")#xtendable multi #on("b")#U#off("b")#ser #on("b")#M#off("b")#icroprocessor #on("b")#EL#off("b")#an Sy­
stem) erklärt durch seinen voll ausgeschriebenen Namen einen wesentlichen Unter­
schied zu anderen Systemen: "Erweiterbares Mehrbenutzer Mikroprozessor ELAN-
System." 
 
Während andere auf Mikroprozessoren (und damit auf sogenannte Personal Compu­
ter) abgestimmte Betriebssysteme #on("u")#einen#off("u")# Benutzer bei seiner Arbeit unterstützen, ist
EUMEL fähig, #on("u")#mehreren#off("u")# Anwendern gleichzeitig die Benutzung eines Computers zu
ermöglichen. Natürlich funktioniert EUMEL ebensogut für einen einzigen Benutzer. Es
gibt aber bei EUMEL die Möglichkeit, durch Ankoppeln weiterer Bildschirme an den
Rechner und #on("b")#ohne#off("b")# Kosten für zusätzliche Software mehreren Benutzern gleichzeitig
die Arbeit an diesem Rechner zu ermöglichen. 
 
Zweitens ist EUMEL hardwareunabhängig, das heißt, gleichgültig von welchem Her­
steller Ihr Computer stammt, die Bedienung und die Kommandosprache ist immer
gleich. Auch können Disketten, die mit einem XY-Rechner beschrieben wurden, von
einem ABC-Computer gelesen werden; durchaus keine Selbstverständlichkeit. 
 
Eine weitere Besonderheit des EUMEL-Systems macht alle froh, die damit arbeiten:
EUMEL ist durchgängig in der Programmiersprache ELAN gehalten. Auch wenn Sie
(noch) nicht programmieren möchten, erleichtert Ihnen ELAN das Leben dadurch, daß
Sie schreiben können, was Sie meinen: eine Datei, die einen Geschäftsbrief fix und
fertig und druckbereit enthält, heißt nicht etwa: 
 
               $TXT.PRT 
 
sondern: 
 
               Angebot an Fa.Müller 1.7.86 
 
 
Ein weiterer wichtiger Unterschied wird Ihnen bewußt werden, wenn Sie ein anderes
Betriebssystem kennen: Die EUMEL-Textverarbeitung ist kein zusätzliches Programm
mit eigener Kommandosprache, welches bei Bedarf geladen werden muß, sondern
steht jederzeit, im wahrsten Sinne des Wortes auf Knopfdruck, zu Ihrer Verfügung. 
#free(1.5)# 
1.2. Wichtige Begriffe 
#free(1.0)# 
-  #on("b")#TASK#off("b")#. Eine #ib#Task#ie# ist ein eigenständiger Prozeß innerhalb eines EUMEL-Systems,
   der entweder zur Verwaltung des EUMEL-Systems oder zu einem Benutzer
   gehört. Indem jedem Benutzer ein eigener Arbeitsbereich zugewiesen ist, wird
   verhindert, daß unkontrolliert auf fremde Daten zugegriffen wird. Eine Task hat
   einen Namen, mit dem sie angesprochen werden kann. Ein EUMEL-System
   besteht aus mehreren Tasks. 
 
   Ein brauchbarer Vergleich mit einem EUMEL-Tasksystem ist ein Firmengebäude:
   Es besteht aus vielen Räumen und jeder Raum ( = Task ) ist entweder ein nor­
   males Arbeitszimmer oder ein Chefzimmer oder eine Werkstatt, in der Dienst­
   leistungen für andere erledigt werden. 
 
   Eine solche Ordnung zeigt folgendes Tasksystem; der #on("i")#kursiv#off("i")# gesetzte Kommentar
   zeigt die Benennung der 'Dienstposten' eines vergleichbaren Büros: 
 
 
         SUPERVISOR #on("i")#(* Zimmerverwalter *)#off("i")# - 
             - 
 
           SYSUR   #on("i")#(* Werkstattmeister *)#off("i")# 
 
 
               ARCHIVE   #on("i")#(* Archivar *)#off("i")# 
 
               configurator    #on("i")#(* Elektriker *)#off("i")# 
 
               OPERATOR   #on("i")#(* Hausmeister *)#off("i")# 
 
                   shutup   #on("i")#(* Nachtwächter *)#off("i")# 
 
       UR   #on("i")#(* Aufsichtsrat *)#off("i")# 
 
           PUBLIC    #on("i")#(* Abteilungsleiter *)#off("i")# 
 
               Meier     #on("i")#(*  Angestellter *)#off("i")# 
               Müller    #on("i")#(*     "         *)#off("i")# 
               Schulze   #on("i")#(*     "         *)#off("i")# 
 
 
   Bildlich gesprochen stellt eine Task also ein 'Arbeitszimmer' für einen EUMEL-
   Benutzer dar. Als EUMEL Anwender richten Sie sich Ihre Task selbst ein, indem
   Sie das Kommando 'begin ("taskname")' geben. 
 
   Nachdem Sie dieses Kommando einmal gegeben haben, existiert diese Task unter
   dem von Ihnen gewählten Namen. 
 
   In der Task (also sinngemäß im Arbeitszimmer) arbeiten Sie - insbesondere legen
   Sie Dateien (= Akten) an. Dateien existieren nur innerhalb einer Task. 
 
   Tasks werden durch den SUPERVISOR verwaltet, er regelt den Zugriff auf Tasks.
   Um Ihre Task zu verlassen, geben Sie das Kommando 'break' an den
   SUPERVISOR, um sie wieder zu betreten, das Kommando 'continue ("taskna­
   me")'. 
 
 
-  #on("b")#DATEI#off("b")#. Eine #ib#Datei#ie# ist eine Menge von zusammengehörigen Daten. Eine Datei in
   einer Task entspricht einer Akte in einem Arbeitszimmer. Eine Task kann bis zu
   200 Dateien enthalten. Jede Datei in einer Task hat einen eigenen Namen, in ver­
   schiedenen Tasks dürfen gleichnamige Dateien existieren. Eine Datei ist in Zeilen
   unterteilt. 
 
   Für die Arbeit in einer Datei am Bildschirm muß auf die Datei mit dem Editor
   zugegriffen werden: 'edit ("dateiname")', danach kann der Inhalt der Datei am
   Terminal bearbeitet werden (siehe Kapitel 4 und 5). 
 
 
-  #on("b")#KOMMANDO#off("b")#. Ein #ib#Kommando#ie# ist ein Befehl an den Rechner, eine Arbeit zu tun.
   Welche Kommandos Sie dem Rechner zum jeweiligen Zeitpunkt geben können,
   hängt davon ab, auf welcher 'Kommandoebene' Sie sich befinden. Als Anhalt gilt: 
 
   -  Kommandos auf Supervisor-Ebene betreffen das Tasksystem. 
 
   -  Kommandos auf Monitor-Ebene betreffen die eigene Task oder Dateien. 
 
   -  Kommandos auf Editor- Ebene betreffen Zeilen, Worte oder einzelne Zeichen
      der aktuellen Datei. 
 
   Auf welcher Ebene Sie sich befinden, werden Sie nach kurzer Gewöhnung leicht
   am Bildschirm erkennen (siehe Teil 3). 
 
   Bei manchen Kommandos muß nicht nur gesagt werden, was getan werden soll,
   sondern auch, womit es getan werden soll. Eine solche Angabe zum Kommando
   heißt #ib#Parameter#ie#. 
                                        Kommando    Parameter 
                                           |            | 
     Beispiel: Lege neue Task an     =    begin    ("taskname") 
               Drucke Datei          =    print    ("dateiname"). 
               Suche das Wort ENDE   =    down     ("ENDE") 
 
   Parameter werden in runde Klammern gesetzt und ggf. durch Kommata voneinan­
   der getrennt. Textparameter werden zusätzlich in Anführungsstriche gesetzt. 
 
   Ein Kommando kann keinen, einen oder viele Parameter benötigen; die
   Beschreibung der Kommandos in diesem Buch zeigt jeweils alle Möglichkeiten. 
 
 
-  #on("b")#SUPERVISOR#off("b")#.  Spezielle Task zur Überwachung eines EUMEL-Systems. Ein
   Benutzer kann durch die #ib#Supervisor#ie#-Kommandos Leistungen von dieser Task
   fordern: neue Task einrichten, Task wiederaufnehmen und diverse Informationen. 
 
 
-  #on("b")#MONITOR#off("b")#.  Befehlsempfänger in einer Task. Jede Arbeit im EUMEL-System
   findet in einer Task statt. Die Arbeit mit einem Computer besteht in wesentlichen
   Teilen im Aufruf von Programmen durch Kommandos. Der Empfänger dieser
   Kommandos in einer Task ist der #ib#Monitor#ie#. Der Monitor ist sichtbar durch eine
   Zeile, in der 'gib kommando' steht. In diese Zeile werden #ib#Kommando#ie#s und erfor­
   derliche Parameter eingegeben. 
 
 
-  #on("b")#ARCHIVE#off("b")#.  Spezielle Task zur Verwaltung des Diskettenlaufwerks. Da für die
   längerfristige Datenhaltung und zur zusätzlichen Datensicherung Dateien auf
   Disketten geschrieben werden, besitzt das EUMEL-System für diese Aufgabe
   eine besondere Task, die die Bedienung vereinfacht und exklusiven Zugriff auf das
   Laufwerk garantiert. 
 
 
-  #on("b")#EDITOR#off("b")#.  Programm zur Dateibearbeitung am Bildschirm. Das Programm wird
   durch das ( Monitor- ) Kommando 'edit' und die Eingabe des Namens der ge­
   wünschten Datei als Parameter gestartet. 
 
   Da ein Bildschirm normelerweise auf 80 Zeichen Zeilenbreite und 24 Zeilen be­
   schränkt ist, kann der Editor als Fenster betrachtet werden, das über die mögli­
   cherweise weitaus größere Datei bewegt wird und durch das der betrachtete Aus­
   schnitt der Datei bearbeitet werden kann. 
 
    
   +-------------------------------------------------------------------+ 
   i                                                                   i 
   i                                                                   i 
   +------------------------------------+                              i 
   i                                    i                              i 
   i      Der Editor, Fenster zur       i                              i 
   i      Dateibearbeitung              i                              i 
   i                                    i                              i 
   +------------------------------------+                              i 
   i                                                                   i 
   +-------------------------------------------------------------------+ 
 
 
 
 
 
 
 
 
 
 
1.3. Die Notation in diesem Buch 
#free(1.0)# 
Im weiteren Text werden Sie schrittweise in die Bedienung des Systems eingeführt.
Für alle Kommandos und Arbeiten haben wir Beispiele in dieses Buch aufgenommen,
die Sie direkt am Rechner nachvollziehen sollten. 
 
Beachten Sie dabei bitte folgende Regeln der Aufschreibung: 
 
-  Es gibt eine Reihe von Tasten auf einer Computertastatur, die eine besondere
   Bedeutung haben. Diese sogenannten Funktionstasten werden ebenso wie beson­
   dere Tastenkombinationen explizit als Tasten dargestellt: 
 
 
      <SV> 
 
      <ESC> <e> 
 
      <CR>
 
 
-  Alles, was Sie am Bildschirm Ihres Rechners schreiben oder lesen sollen, ist in
   Textbereiche, die einen Bildschirm darstellen, eingefaßt. 
 
  Beispiel: 
 
____________________________________________________________________________ 
 
gib kommando: 
edit ("meine datei") 
 
____________________________________________________________________________ 
 
 
-  Innerhalb des Handbuchs sind in der Aufschreibung die Konventionen der
   Programmiersprache ELAN, in der alle Programme des Betriebssystems geschrie­
   ben sind, berücksichtigt. Dabei sind folgende Besonderheiten zu beachten: 
 
   1) Kommandos werden grundsätzlich klein geschrieben. 
 
   2) Dateinamen u.ä. werden in Klammern und Anführungsstriche gesetzt. In
      diesem Buch steht an den Stellen, wo ein Dateiname auftaucht #on("i")# 'dateiname' #off("i")#;
      den Namen, den Sie tatsächlich verwenden, können Sie frei wählen. 
 
   3) Falls besondere Begriffe oder Beispiele innerhalb eines normalen Textes
      auftreten, werden sie in einfache Anführungsstriche gesetzt. 
 
 
Also: Das Kommando 'edit' benötigt als Parameter einen Dateinamen. Wählen Sie
      einen Namen und geben Sie 'edit ("dateiname")' ein.  Falls Sie den Namen #on("i")#
      "Geschäftsbrief" #off("i")# gewählt haben, müssen Sie am Bildschirm: 
 
 
edit ("Geschäftsbrief") 
 
 
tippen und das Kommando mit der <CR> Taste dem Monitor zur Bearbeitung überge­
ben: 
 
____________________________________________________________________________ 
 
gib kommando : 
edit ("Geschäftsbrief") 
 
____________________________________________________________________________ 
 
 
 
 
#on("b")##on("i")#Die Eingabe von <CR> als 'Auslöser' für die Ausführung von
Kommandos wird im weiteren nicht besonders hervorgehoben.#off("b")##off("i")# 
#page# 
1.4. Voraussetzungen 
 
#free(1.0)# 
Neben dem Computer an sich ist die vollständige Installation eines EUMEL-Systems
auf diesem Computer Voraussetzung für alle im folgenden beschriebenen Aktivitäten. 
 
Die Beschreibung einer Systeminstallation finden Sie im Anhang I. Im weiteren gehen
wir davon aus, daß Ihr Rechner sich in einem Zustand befindet, der durch Eingabe
von <SV> oder <CNTL> <b> (gleichzeitig) die sogenannte EUMEL-Tapete zeigt und
Supervisor-Kommandos annimmt. 
 
 
____________________________________________________________________________ 
 
                                           Terminal 2  
 
 
                      EUMEL Version 1.8/M 
 
 
        gib supervisor kommando: 
        begin("meine erste task") 
 
 
 
   ESC ? --> help 
   ESC b --> begin("")            ESC h --> halt 
   ESC c --> continue("")         ESC s --> storage info 
   ESC q --> break                ESC t --> task info 
 
 
____________________________________________________________________________ 
 
 
 
Weiterführende Information zum Aufbau eines EUMEL-Systems finden Sie im An­
hang I. 
 
#page# 
Die Funktionstasten des EUMEL-Systems 
 
 
 
Die Lage der EUMEL-Funktionstasten entnehmen Sie bitte der speziellen Installa­
tionsanleitung zu dem von Ihnen benutzten Gerät. #l pos (0.0)##l pos(4.0)# 

 
<,>,v,^           Positionierungstasten 
#table# 
#free(0.5)# 
<SHIFT>           Umschalttaste 
#free(0.5)# 
<CR>              Eingabe-/ Absatztaste 
#free(0.5)# 
<HOP>             Verstärkertaste 
#free(0.5)# 
<RUBOUT>          Löschtaste 
#free(0.5)# 
<RUBIN>           Einfügetaste 
#free(0.5)# 
<TAB>             Tabulatortaste 
#free(0.5)# 
<MARK>            Markiertaste 
#free(0.5)# 
<ESC>             Kommandotaste 
#free(0.5)# 
<SV>              Supervisortaste 
#free(0.5)# 
<STOP>            Stoptaste 
#free(0.5)# 
<WEITER>          Weitertaste 
#tableend##clear pos# 
 
Task-Organisation 
#free(1.0)# 
 
Zum Verständnis der Handhabung des Systems sollten Sie versuchen, eine Vorstel­
lung von der Organisation der Teile zu bekommen. 
 
Die einzelnen #ib#Task#ie#s eines EUMEL-Systems 'stehen nicht frei im Raum', sondern
sind in einer baumartigen Beziehung organisiert: 
 
 
 
SUPERVISOR 
    - 
    SYSUR 
        configurator 
        OPERATOR 
 
        ARCHIVE 
UR 
    PUBLIC 
        Meyer 
        Müller 
        Schulze 
 
 
 
Das System besteht aus zwei Zweigen, die nebeneinander liegen: 
 
Dem Systemzweig mit der Wurzel SUPERVISOR 
 
                 und 
 
dem Benutzerzweig mit der Wurzel UR. 
 
Der Systemzweig stellt Ihnen privilegierte Dienstleistungen zur Verfügung, der Benut­
zerzweig stellt die normale Arbeitsumgebung dar. 
 
Alle unter diesen Wurzeln liegenden Tasks des EUMEL-Systems haben mindestens
einen Vorgänger, es besteht also eine 'Vater-Sohn Beziehung' zwischen allen Tasks
des Systems. 
 
Grundsätzlich können Dateien ohne besondere Kommandos zur Vater-Task geschickt
und von der Vater-Task geholt werden, aber nicht zu beliebigen anderen Tasks. 
 
'Müller' kann eine Datei an '#ib#PUBLIC#ie#' schicken und 'Schulze' kann sie dann dort
abholen, aber eine direkte Sendung von 'Müller' nach 'Schulze' ist in der Regel nicht
möglich. 
 
Zur Sprechweise: jede Task, über die diese Art von 'Dateivermittlung' abgewickelt
werden kann, heißt 'Manager-Task'. Jede Task kann zum '#ib#Manager#ie#' erklärt werden. 
1.5. Eine Beispielsitzung 
#free(1.0)# 
Der Ablauf zur Erstellung eines Schreibens stellt sich im EUMEL-System wie folgt
dar: 
 
  <SV>       SUPERVISOR aufrufen 
 
 
 
____________________________________________________________________________ 
 
                                           Terminal 2  
 
 
                      EUMEL Version 1.8/M 
 
 
        gib supervisor kommando: 
        begin("meine erste task") 
 
 
 
   ESC ? --> help 
   ESC b --> begin("")            ESC h --> halt 
   ESC c --> continue("")         ESC s --> storage info 
   ESC q --> break                ESC t --> task info 
 
 
____________________________________________________________________________ 
 
 
Durch das Kommando 'begin ("meine erste task")', welches durch <CR> abgeschlos­
sen werden muß, wird eine Task mit dem Namen 'meine erste task' im Benutzer­
zweig, also unterhalb von 'PUBLIC' angelegt. Würde diese Task bereits existieren, so
könnten Sie sie mit 'continue ("meine erste task")' an das Terminal holen. 
 
____________________________________________________________________________ 
 
gib kommando : 
edit ("Rechnung zum 31.12.86") 
 
____________________________________________________________________________ 
 
 
In der Task eröffnen Sie eine Datei mit dem Kommando 'edit ("dateiname")'. Falls
diese Datei neu ist, erfolgt eine Kontrollfrage (zur Kontrolle der gewünschten Schreib­
weise des Dateinamens), die Sie durch <j> bejahen. 
 
Die Datei ist in diesem Beispiel bereits mit etwas Text gefüllt. Tippen Sie einen belie­
bigen Text ein und beenden Sie die Bearbeitung dieser ersten Datei durch Drücken
der Tasten <ESC> <q> (nacheinander!). 
 
 
____________________________________________________________________________ 
.................... Rechnung zum 31.12.86 ...................... Zeile 1      
                                            G M D 
                                            Sankt Augustin 
                                            Schloß Birlinghoven 
 
Sehr geehrte Damen und Herren, 
> 
 
 
____________________________________________________________________________ 
 
 
 
 
Um die Arbeit in der Task zu beenden, geben Sie auch an dieser Stelle <ESC> <q> 
(nacheinander!) ein. 
 
Nach Verlassen der Task ist wiederum die EUMEL-Tapete auf dem Bildschirm. Jede
weitere Aktion wird wiederum von hier aus durch <SV> begonnen. Insbesondere zum
#ib#Ausschalten des Geräts#ie# muß nach <SV> die Task '#ib#shutup#ie#' angestoßen werden (siehe
auch Anhang I). 

