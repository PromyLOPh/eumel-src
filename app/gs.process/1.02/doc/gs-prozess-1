limit (11.0)##pagelength (16.5)##block# 
#start (2.0,0.0)# 
#page (1)# 
#headodd# 
#center#gs-Prozess#right#% 
 
#end# 
#headeven# 
%#center#gs-Prozess
 
#end# 
#center#1 
 
#on("b")#1  Was kann gs-Prozess#off("b")# 
 
#on("b")#gs-Prozess#off("b")# ist ein Programmsystem unter dem Betriebssystem EUMEL, mit dem ein
Anwendungsbereich erschlossen werden kann, der bisher in der Schule zumeist sehr
stiefmütterlich behandelt wurde: die Prozeßdatenverarbeitung - das Messen, Steuern
und Regeln mit dem Computer. 
 
Es wird dadurch möglich, externe Modelle/Geräte (z.B. eine Ampelanlage) zu steuern
oder von externen Meßfühlern (z.B. einem Temperaturfühler) oder Eingabeeinheiten
(z.B. einem Lochkartenleser) Daten aufzunehmen. Durch die Kombination der
beiden Vorgänge können sogar komplexe geregelte Systeme in Modellen nachgebildet
werden. 
 
Eigentlich ist eine solch stiefmütterliche Behandlung dieses Anwendungsbereiches
von Computern in der Schule gar nicht einzusehen, denn in der Forschung, im
Dienstleistungsbereich, im privaten Bereich und vor allem in der Produktion gibt es
eine Vielzahl von Anwendungen, z.B.: 
 
   Meßdatenerfassung und -auswertung bei Experimenten, Wetterbeobachtung,
   seismologische Untersuchungen, ..., Ampelsteuerungen, Verkehrsleitsysteme, ...,
   Scannerkassen, Scheckkartenleser, Geldautomaten, ..., Waschmaschinen,
   Heizungsanlagen, Modelleisenbahnen, ..., CNC-Maschinen, Universalhand­
   habungsautomaten (Roboter),... 
 
In den meisten Fällen werden Computer eingesetzt, die speziell für diesen
Anwendungsbereich entwickelt wurden. Insbesondere an die Verarbeitungsge­
schwindigkeit solcher Systeme werden sehr hohe Anforderungen gestellt. Solche
Systeme sind für die schulische Verwendung viel zu teuer. Zumeist sind auch die in
der Realität ablaufenden Vorgänge so komplex, daß sie als Ganzes gar nicht im
Unterricht nachgebildet werden können. 
 
Das aber kann auch nicht Ziel einer Auseinandersetzung mit diesem Anwendungs­
bereich in der Schule sein. Hier gilt es, unter didaktisch-methodischen Gesichts­
punkten, Grundprinzipen der Prozeßdatenverarbeitung zu vermitteln und beispiel­
hafte Anwendungen an Modellen zu erarbeiten und zu erproben. In einem zeitge­
mäßen Informatikunterricht darf dieser wichtige Anwendungsbereich von Computern
nicht ausgespart bleiben. 
 
Bisher scheiterte das Messen, Steuern und Regeln mit dem Computer in der Schule
meistens daran, daß es keine standardisierten Software- und Hardware-Systeme und
auch keine geeigneten Modelle gab. Das aber hat sich inzwischen geändert.
Verschiedene Hersteller bieten Interface-Systeme und Modelle an, die gut verwendet
werden können. 
 
Auch #on("b")#gs-Prozess#off("b")# greift auf ein solches Interface-System zu, das aus mehreren
Einzelkomponenten besteht (mehr dazu in den folgenden Kapiteln). Das sind Geräte,
über die der Computer "Kontakt" mit den 'Endgeräten' (z.B. Modellen) aufnimmt:
Hier werden Ausgaben des Computers in "elektrische Impulse" umgesetzt, mit denen
Modelle angesprochen werden können (z.B. Lämpchen ein- und ausgeschaltet,
Motoren zu Drehungen nach links oder rechts veranlaßt werden können). Ein­
gehende "Impulse" werden in "computerangemessene Form" umgewandelt und an
den Computer weitergegeben. 
 
Der Aufwand, der betrieben werden muß, um ein Interfacesystem sachgerecht anzu­
steuern, ist erheblich. Es kostet einige Mühe und vor allem viel Zeit, um alle Details
des Interfacesystems und seiner Programmierung kennenzulernen, und es gehört
eine gehörige Portion Erfahrung und vor allem viel Geduld dazu, um Fehlfunktionen
zu analysieren und letztlich zu beheben. Das alles ist einem Anwender, dem es z.B.
darum geht, ein bestimmtes Modell anzusteuern, nicht zumutbar. 
 
Hier schafft nun #on("b")#gs-Prozess#off("b")# Abhilfe! #on("b")#gs-Prozess#off("b")# ist eingebettet in die komfortable
Benutzerschnittstelle #on("b")#gs-DIALOG#off("b")#, so daß der Einarbeitungsaufwand in das
Programmsystem gering und eine einfache Bedienung des Systems gewährleistet ist. 
 
Ähnlich wie bei #on("b")#gs-Herbert und Robbi#off("b")# wird eine komplette Programmier­
umgebung zur Verfügung gestellt, die alle Funtionen enthält (Informationen,
Konfiguration des Systems, Erstellung und Ausführung von Programmen, Archiv­
handling), die bei der Arbeit von Bedeutung sein können - natürlich jetzt auf das
Messen, Steuern und Regeln bezogen. Durch diese Programmierumgebung wird
selbst dem Computerneuling ermöglicht, einen einfachen, eingängigen Zugang zu
diesem Anwendungsbereich zu finden. 
 
#on("b")#gs-Prozess#off("b")# stellt einen Basisbefehlssatz (Eingabe-, Ausgabebefehle und Tests) zur
Verfügung, mit dessen Hilfe Lösungsalgorithmen aus diesem Anwendungsbereich
angemessen formuliert werden können. Dabei kann sich der Anwender ganz auf sein
Problem konzentrieren, da er sich um die spezifische Ansteuerung des Interfaces
nicht zu kümmern braucht - das erledigt #on("b")#gs-Prozess#off("b")#. 
 
Der Basisbefehlssatz besteht aus nur wenigen Befehlen, um das Erlernen und den
Umgang damit möglichst einfach zu gestalten. Andererseits ist der Befehlssatz so
umfangreich und universell, daß alle schulisch relevanten Problemstellungen aus
diesem Anwendungsbereich angemessen bearbeitet werden können. 




