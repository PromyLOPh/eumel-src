PACKET notice DEFINES notice material,
                      notice heading,
                      notice operation,
                      notice result, 
                      notice frequency,
                      notice runtime,
                      output mem :


(***************************************************************************)
(*                                                                         *)
(*  Autor: A. Steinmann                        Copyright (C): HRZ - Unibi  *)
(*                                                                         *)
(***************************************************************************)


FILE VAR mem ;



PROC notice result (TEXT CONST operation, REAL CONST runtime) :

  TEXT VAR layout :: "" ;
 
  layout CAT (operation + (40 - LENGTH operation) * " " + text (runtime, 10, 5) + "   msec") ;
  putline (mem, layout) 

END PROC notice result ;



PROC notice material (TEXT CONST name) :

  TEXT VAR layout :: "" ;

  layout CAT ("     " + name) ;
  line (mem, 4) ;
  putline (mem, layout) ;
  layout := "     " + LENGTH name * "=" ;
  putline (mem, layout) ;
  line (mem, 3) 

END PROC notice material ;



PROC notice heading (TEXT CONST name) :

  TEXT VAR layout :: "" ;

  layout CAT ("     " + name) ;
  line (mem,2) ;
  putline (mem, layout) ;
  line (mem, 1) ;

  display (""6""+code(21)+code(0)) ;
  display (""5""13"") ;
  display (""15""+" "+name+" "+""14"")

END PROC notice heading ;



PROC notice frequency (INT CONST frequency 1, frequency 2) :

  line (mem, 1) ;
  put (mem, "Wiederholungsfaktor für schnelle Operationen :   "+text (frequency 1)) ;
  line (mem, 1) ;
  put (mem, "Wiederholungsfaktor für langsame Operationen :   "+text (frequency 2)) ;
  line (mem, 1)

END PROC notice frequency ;



PROC notice operation (TEXT CONST operation) :

  display(""6""+code(22)+code(0)) ;
  display (""5""13"") ;
  display (""15""+" "+ operation +" "+""14"") ;

END PROC notice operation ;



PROC notice runtime (REAL CONST runtime) :

  line (mem, 3) ;
  putline (mem, "Gesamtlaufzeit : " + text (runtime)) ;

END PROC notice runtime ;



PROC output mem :

  mem := sequential file (output, "memory")

END PROC output mem ;


END PACKET notice ;
