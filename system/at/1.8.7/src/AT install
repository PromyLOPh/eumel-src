(*************************************************************************)
(*** Insertiert alle notwendigen Pakete, damit ein AT-System generiert ***)
(*** werden kann, das die Hardwareuhr lesen und Partitionen bedienen   ***)
(*** kann. Startet den "AT Generator".                                 ***)
(***                                                                   ***)
(*** Autor : W. Sauerwein                             Stand : 15.07.86 ***)
(*************************************************************************)

erste bildschirmmeldung;
IF ich bin single THEN putline ("Die AT-spezifische Software ist nur auf Multi-User-Systemen benutzbar !")
                  ELSE hole dateien vom archiv;
                       insertiere alle pakete;
                       put line ("Running ""AT Generator""...");
                       run ("AT Generator")
FI;
forget ("AT install", quiet).

ich bin single : (pcb (9) AND 255) <= 1.

insertiere alle pakete :
   insert and say ("AT Utilities").

erste bildschirmmeldung :
   page;
   put center (" Generator fÃ¼r AT-spezifische Software gestartet."); line;
   put center ("--------------------------------------------------");
   line (2).

hole dateien vom archiv :
   TEXT VAR datei;
   datei := "AT Utilities";             hole wenn noetig;
   datei := "AT Generator";             hole wenn noetig;
   release (archive);
   line.

hole wenn noetig :
   IF NOT exists (datei) THEN
      put line ("Loading """ + datei + """...");
      fetch (datei, archive)
   FI.

PROC insert and say (TEXT CONST datei) :

   INT VAR cx, cy;
   put line ("Inserting """ + datei + """...");
   get cursor (cx, cy);
   insert (datei);
   cl eop (cx, cy); line;
   forget (datei, quiet).

END PROC insert and say;

TEXT PROC inverse (TEXT CONST t):
  ""15"" + t + " " + ""14""
END PROC inverse;

PROC put center (TEXT CONST t):
   put center (t, 80)
END PROC put center;

PROC put center (INT CONST zeile, TEXT CONST t):
   put center (zeile, t, 80)
END PROC put center;

PROC put center (TEXT CONST t, INT CONST gesamtbreite):
   INT VAR cy;
   get cursor (cy, cy);
   put center (cy, t, gesamtbreite)
END PROC put center;

PROC put center (INT CONST zeile, TEXT CONST t, INT CONST gesamtbreite):
   cursor ((gesamtbreite - length (t)) DIV 2, zeile);
   put (t).
END PROC put center;

PROC cl eol: 
  out (""5"") 
END PROC cl eol;

PROC cl eop: 
  out (""4"") 
END PROC cl eop; 
 
PROC cl eol (INT CONST cx, cy): 
   cursor (cx, cy); 
   cl eol 
END PROC cl eol; 
 
PROC cl eop (INT CONST cx, cy): 
   cursor (cx, cy); 
   cl eop 
END PROC cl eop; 

